// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.iam.admin.v1alpha;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/iam/admin/v1alpha;iamadminpb";

// An interface for managing ServiceAccounts.
service ServiceAccountAdminService {
  // Creates a new ServiceAccount.
  rpc CreateServiceAccount(CreateServiceAccountRequest) returns (ServiceAccount) {
    option (google.api.http) = {post: "/v1alpha/{parent=projects/*/serviceAccounts/*}/serviceAccounts"};
  }

  // Lists matching ServiceAccounts.
  rpc ListServiceAccounts(ListServiceAccountsRequest) returns (ListServiceAccountsResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=projects/*/serviceAccounts/*}/serviceAccounts"};
  }

  // Gets a ServiceAccount.
  rpc GetServiceAccount(GetServiceAccountRequest) returns (ServiceAccount) {
    option (google.api.http) = {get: "/v1alpha/{name=projects/*/serviceAccounts/*}"};
  }

  // Updates a ServiceAccount.
  rpc UpdateServiceAccount(UpdateServiceAccountRequest) returns (ServiceAccount) {
    option (google.api.http) = {patch: "/v1alpha/{name=projects/*/serviceAccounts/*}"};
  }

  // Deletes a ServiceAccount.
  rpc DeleteServiceAccount(DeleteServiceAccountRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {delete: "/v1alpha/{name=projects/*/serviceAccounts/*}"};
  }
}

// A Service account is an entity created to serve for the service needs.
message ServiceAccount {
  // The resource name of the service account in the format
  // - `projects/*/serviceAccounts/*`.
  // - `serviceAccounts/{service_account}
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam.blockysource.com/ServiceAccount"}
  ];

  // The time when the service account was created.
  google.protobuf.Timestamp create_time = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when the service account was last updated.
  google.protobuf.Timestamp update_time = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The display name of the service account.
  string display_name = 4 [(google.api.field_behavior) = OPTIONAL];
}

// A request to create a service account.
message CreateServiceAccountRequest {
  // The resource name of the project in which the service account will be created.
  // The format is `projects/*`.
  string parent = 1 [
    (google.api.field_behavior) = OPTIONAL,
    (google.api.resource_reference) = {type: "iam.blockysource.com/Project"}
  ];

  // A service account to create.
  ServiceAccount service_account = 2 [(google.api.field_behavior) = REQUIRED];
}

// A request to list service accounts.
message ListServiceAccountsRequest {
  // The resource name of the project for which to list service accounts.
  // The format is `projects/*`.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam.blockysource.com/ServiceAccount"}
  ];

  // The maximum number of items to return.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // An optional pagination token received from previous call to ListServiceAccounts.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to ListServiceAccounts must match
  // the call that provided the page token.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// A response message to list service accounts.
message ListServiceAccountsResponse {
  // The list of service accounts.
  repeated ServiceAccount service_accounts = 1 [(google.api.field_behavior) = OUTPUT_ONLY];

  // An optional pagination token returned from a previous call to
  // ListServiceAccounts.
  // Provide this to retrieve the subsequent page.
  string next_page_token = 2 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// A request to get a service account.
message GetServiceAccountRequest {
  // The resource name of the service account in the format
  // - `projects/*/serviceAccounts/*`.
  // - `serviceAccounts/{service_account}`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam.blockysource.com/ServiceAccount"}
  ];
}

// A request message to update the service account.
message UpdateServiceAccountRequest {
  // The resource name of the service account to update.
  // The format is:
  // - `projects/*/serviceAccounts/*`.
  // - `serviceAccounts/{service_account}`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam.blockysource.com/ServiceAccount"}
  ];

  // A service account to update.
  ServiceAccount service_account = 2 [(google.api.field_behavior) = REQUIRED];

  // The mask used to update the service account.
  google.protobuf.FieldMask update_mask = 3 [(google.api.field_behavior) = REQUIRED];
}

// A request message to delete the service account.
message DeleteServiceAccountRequest {
  // The resource name of the service account to delete.
  // The format is:
  // - `projects/*/serviceAccounts/*`.
  // - `serviceAccounts/{service_account}`.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "iam.blockysource.com/ServiceAccount"}
  ];
}