// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.authz.admin.v1alpha;

import "blocky/authz/type/signing_algorithm.proto";
import "google/api/field_behavior.proto";
import "google/api/client.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/authz/admin/v1alpha;authzadminv1alpha";


// TokensAdminService is an administrative service for managing tokens.
service TokensAdminService {
  // Configures the token scopes.
  option (google.api.oauth_scopes) = "https://www.blockyapis.com/auth/authz.admin";

  // Configures the access token creation.
  rpc ConfigureTokenCreation(ConfigureTokenCreationRequest) returns (ConfigureTokenCreationResponse);

  // Configures the refresh token creation.
  rpc ConfigureRefreshTokenCreation(ConfigureTokenCreationRequest) returns (ConfigureTokenCreationResponse);

  // Returns the current configuration for the access token creation.
  rpc ShowTokenCreationConfig(ShowTokenCreationConfigRequest) returns (ShowTokenCreationConfigResponse);
}

// Request message for
// [TokensAdminService.ConfigureTokenCreation][blocky.authz.v1alpha.TokensAdminService.ConfigureTokenCreation].
message ConfigureTokenCreationRequest {
  // Required. The new configuration for the access token creation.
  AccessTokenCreationConfig access_config = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for
// [TokensAdminService.ConfigureTokenCreation][blocky.authz.v1alpha.TokensAdminService.ConfigureTokenCreation].
message ConfigureTokenCreationResponse {
  // The new configuration for the access token creation.
  AccessTokenCreationConfig config = 1;
}

// Request message for
// [TokensAdminService.ConfigureRefreshTokenCreation][blocky.authz.v1alpha.TokensAdminService.ConfigureRefreshTokenCreation].
message ConfigureRefreshTokenCreationRequest {
  // Required. The new configuration for the refresh token creation.
  RefreshTokenCreationConfig refresh_config = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for
// [TokensAdminService.ConfigureRefreshTokenCreation][blocky.authz.v1alpha.TokensAdminService.ConfigureRefreshTokenCreation].
message ConfigureRefreshTokenCreationResponse {
  // The new configuration for the refresh token creation.
  RefreshTokenCreationConfig config = 1;
}

// Request message for
// [TokensAdminService.ShowTokenCreationConfig][blocky.authz.v1alpha.TokensAdminService.ShowTokenCreationConfig].
message ShowTokenCreationConfigRequest {}

// Response message for
// [TokensAdminService.ShowTokenCreationConfig][blocky.authz.v1alpha.TokensAdminService.ShowTokenCreationConfig].
message ShowTokenCreationConfigResponse {
  // The current configuration for the access token creation.
  AccessTokenCreationConfig config = 1;

  // Current configuration for the refresh token creation.
  RefreshTokenCreationConfig refresh_config = 2;
}

// Configuration for the access token creation.
message AccessTokenCreationConfig {
  // The algorithm to use for the access token creation.
  authz.type.SigningAlgorithm favored_key_algorithm = 1 [(google.api.field_behavior) = OPTIONAL];

  // The duration for which the access token is valid.
  google.protobuf.Duration token_expiration = 2 [(google.api.field_behavior) = OPTIONAL];

  // Default key identifier to use for the access token creation.
  string default_key_id = 3 [(google.api.field_behavior) = OPTIONAL];

  // The name of the issuer of the access token.
  // If not set, the default value is "blocky".
  string issuer = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Configuration for the refresh token creation.
message RefreshTokenCreationConfig {
  // The algorithm to use for the access token creation.
  authz.type.SigningAlgorithm favored_key_algorithm = 1 [(google.api.field_behavior) = OPTIONAL];

  // The duration for which the access token is valid.
  // If not set, the default value is 1 hour.
  google.protobuf.Duration token_expiration = 2 [(google.api.field_behavior) = OPTIONAL];

  // Default key identifier to use for the access token creation.
  string default_key_id = 3 [(google.api.field_behavior) = OPTIONAL];

  // The number of bytes used as a refresh token random value.
  // By default this value is 128 bytes.
  // This value should not be greater than 2048 bytes.
  int32 token_size = 4 [(google.api.field_behavior) = OPTIONAL];
}