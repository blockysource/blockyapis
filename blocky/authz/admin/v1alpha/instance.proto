// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.authz.admin.v1alpha;

import "blocky/authz/type/signing_algorithm.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/authz/admin/v1alpha;authzadminv1alpha";

// Is a authorization service instance resource.
message Instance {
  option (google.api.resource) = {
    type: "authz.blockyapis.com/Instance"
    pattern: "projects/{project}/instance"
  };

  // The unique name of the authorization service instance.
  // Values are of the form:
  // 'projects/{project}/instance'.
  // On a standalone authorization service, the instance identifier
  // could be aliased to a 'default' instance.
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];

  // Creation timestamp of the instance.
  google.protobuf.Timestamp create_time = 2 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Last modification timestamp of the instance.
  google.protobuf.Timestamp update_time = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Configuration for the authorization service instance.
  InstanceConfig config = 4 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];
}

// Configuration for an authorization service instance.
message InstanceConfig {
  // The name of the service issuing tokens.
  string issuer = 1;

  // The rotation period for the service account key.
  google.protobuf.Duration key_rotation_period = 2 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // Access token configuration.
  AccessTokenConfig access_token = 3 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // Refresh token configuration.
  RefreshTokenConfig refresh_token = 4 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];
}

// Is a configuration for access tokens.
message AccessTokenConfig {
  // Preferred algorithm used to sign tokens.
  authz.type.SigningAlgorithm algorithm = 1 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // The duration of validity of the access token.
  google.protobuf.Duration duration = 2 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];
}

// Is a configuration for the refresh tokens.
message RefreshTokenConfig {
  // Preferred algorithm used to sign tokens.
  authz.type.SigningAlgorithm algorithm = 1 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // The duration of validity of the refresh token.
  google.protobuf.Duration duration = 2 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // The number of bytes used as a refresh token random value.
  // By default this value is 128 bytes.
  // This value should not be greater than 2048 bytes.
  int32 token_size = 3 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];
}