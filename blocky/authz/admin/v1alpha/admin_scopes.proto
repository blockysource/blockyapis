// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.authz.admin.v1alpha;

import "blocky/authz/type/signing_algorithm.proto";
import "google/api/field_behavior.proto";
import "google/api/client.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/authz/admin/v1alpha;authzadminv1alpha";


// The Scopes Admin API.
//
// This API provides administrative services for authorization Scopes.
service ScopesAdminService {
  option (google.api.oauth_scopes) = "https://www.blockyapis.com/auth/authz.admin";

  // Lists authorization scopes that are registered with the service.
  rpc ListScopes(ListScopesRequest) returns (ListScopesResponse);

  // Creates a new authorization scope.
  rpc CreateScope(CreateScopeRequest) returns (Scope);

  // Updates an existing authorization scope with new information.
  rpc UpdateScope(UpdateScopeRequest) returns (Scope);

  // Deletes an authorization scope.
  rpc DeleteScope(DeleteScopeRequest) returns (google.protobuf.Empty);
}


// Request message for
// [ScopesAdminService.ListScopes][blocky.authz.admin.v1alpha.ScopesAdminService.ListScopes].
message ListScopesRequest {
  // The maximum number of items to return.
  int32 page_size = 1;

  // The next_page_token value returned from a previous List request, if any.
  string page_token = 2;
}

// Response message for
// [ScopesAdminService.ListScopes][blocky.authz.admin.v1alpha.ScopesAdminService.ListScopes].
message ListScopesResponse {
  // List of authorization scopes.
  repeated Scope scopes = 1;

  // The pagination token to retrieve the next page of results. If the value is
  // empty, no further results remain.
  string next_page_token = 2;
}

// An authorization scope that is registered with the service.
message Scope {
  // The authorization scope identifier and resource name.
  string scope = 1;

  // The date of creation of the scope.
  google.protobuf.Timestamp create_time = 2;

  // The human-readable description of the scope.
  string description = 3;

  // The human-readable display name of the scope.
  string display_name = 4;
}




// Request message for
// [ScopesAdminService.CreateScope][blocky.authz.admin.v1alpha.ScopesAdminService.CreateScope].
message CreateScopeRequest {
  // Required, authorization scope identifier and resource name.
  // This must be unique within the service, and cannot be changed after.
  string scope = 1 [(google.api.field_behavior) = REQUIRED];

  // An optional, human-readable description of the scope.
  string description = 2 [(google.api.field_behavior) = OPTIONAL];

  // An optional, human-readable display name of the scope.
  string display_name = 3 [(google.api.field_behavior) = OPTIONAL];
}


// Request message for
// [ScopesAdminService.UpdateScope][blocky.authz.admin.v1alpha.ScopesAdminService.UpdateScope].
message UpdateScopeRequest {
  // Required, authorization scope identifier and resource name.
  string scope = 1 [(google.api.field_behavior) = REQUIRED];

  // Required, the update mask applies to the resource. For the `FieldMask`
  // definition, see
  // https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask
  google.protobuf.FieldMask update_mask = 2 [(google.api.field_behavior) = REQUIRED];

  // An optional, human-readable description of the scope.
  string description = 3 [(google.api.field_behavior) = OPTIONAL];

  // An optional, human-readable display name of the scope.
  string display_name = 4 [(google.api.field_behavior) = OPTIONAL];
}

// Request message for
// [ScopesAdminService.DeleteScope][blocky.authz.admin.v1alpha.ScopesAdminService.DeleteScope].
message DeleteScopeRequest {
  // Required, authorization scope identifier and resource name.
  string scope = 1 [(google.api.field_behavior) = REQUIRED];
}
