// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.identity.v1alpha;

import "blocky/identity/v1alpha/identity.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/identity/v1alpha;identitypb";

// The identity service implementation.
service IdentityService {
  // Registers a new user with the given credentials.
  rpc RegisterUser(RegisterUserRequest) returns (RegisterUserResponse);

  // Authenticates a user with the given credentials.
  rpc AuthenticateUser(AuthenticateUserRequest) returns (AuthenticateUserResponse);

  // Lists identity providers with the configurations.
  rpc ListIdentityProviders(ListIdentityProvidersRequest) returns (ListIdentityProvidersResponse);

  // Generates a one-time random token that can be used to identify and authenticate a user
  // in specific scenarios like resetting users password.
  // It is important to NOT return this token directly to the user, but rather use it to send over
  // some secure channel where the user authentication is expected
  rpc GenerateResetPasswordToken(GenerateResetPasswordTokenRequest) returns (GenerateResetPasswordTokenResponse);

  // Resets a user's password.
  rpc ResetPassword(ResetPasswordRequest) returns (ResetPasswordResponse);
}

// Is a request message for the RegisterUser method.
message RegisterUserRequest {
  // The credentials used to register the user.
  // Exactly one of the following fields must be set.
  oneof credentials {
    // The credentials based on email and password.
    EmailPasswordCredential email_password = 1;

    // The external identity provider credentials obtained from the client application flow.
    ExternalIdentityCredential external_identity = 2;
  }
}

// Is a response message for the RegisterUser method.
message RegisterUserResponse {
  // The user that has been registered.
  User user = 1;
}

// Is a request message for the AuthenticateUser method.
message AuthenticateUserRequest {
  // The credentials used to authenticate the user.
  // Exactly one of the following fields must be set.
  oneof credentials {
    // The credentials based on email and password.
    EmailPasswordCredential email_password = 1;

    // The external identity provider credentials obtained from the client application flow.
    ExternalIdentityCredential third_party_identity = 2;
  }
}

// Is a response message for the AuthenticateUser method.
message AuthenticateUserResponse {
  // The user that has been authenticated.
  User user = 1;
}

// EmailPasswordCredential represents the email and password credential.
message EmailPasswordCredential {
  // The unique email address of the user.
  string email_address = 1 [(google.api.field_behavior) = REQUIRED];

  // The password of the user.
  string password = 2 [(google.api.field_behavior) = REQUIRED];
}

// The external identity provider credentials obtained from the client application flow.
message ExternalIdentityCredential {
  // The name of the external identity provider.
  // This needs to be a valid resource name.
  string provider = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "identity.blockyapis.com/ExternalIdentityProvider"}
  ];

  // The token that is used to authenticate the user.
  string token = 2 [(google.api.field_behavior) = REQUIRED];
}

// ListIdentityProvidersRequest is a request message for the ListIdentityProviders method.
message ListIdentityProvidersRequest {
  // An optional parent resource name of the identity provider.
  // I.e.:
  // - `projects/{project}
  string parent = 1 [(google.api.field_behavior) = OPTIONAL];

  // The maximum number of items to return.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // The next page token.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// ListIdentityProvidersResponse is a response message for the ListIdentityProviders method.
message ListIdentityProvidersResponse {
  // The list of identity providers.
  repeated OIDCProvider identity_providers = 1;

  // The next page token.
  string next_page_token = 2;
}

// GenerateResetPasswordTokenRequest is a request message for the GenerateResetPasswordToken method.
message GenerateResetPasswordTokenRequest {
  // An optional parent resource name of the identity provider.
  // I.e.:
  // - `projects/{project}
  string parent = 1 [(google.api.field_behavior) = OPTIONAL];

  // The unique email address of the user used for email-password credentials tuple.
  string email_address = 2 [(google.api.field_behavior) = REQUIRED];

  // The token validity duration.
  google.protobuf.Duration validity_duration = 3 [(google.api.field_behavior) = OPTIONAL];
}

// GenerateResetPasswordTokenResponse is a response message for the GenerateResetPassworTokent method.
message GenerateResetPasswordTokenResponse {
  // The token that is used to authenticate the user.
  string token = 1 [(google.api.field_behavior) = REQUIRED];
}


// ResetPasswordRequest is a request message for the ResetPassword method.
message ResetPasswordRequest {
  // An optional parent resource name of the identity provider.
  // I.e.:
  // - `projects/{project}
  string parent = 1 [(google.api.field_behavior) = OPTIONAL];

  // The token used to authenticate the user in resetting the password.
  string token = 2 [(google.api.field_behavior) = REQUIRED];

  // The new password of the user.
  string new_password = 3 [(google.api.field_behavior) = REQUIRED];
}

// ResetPasswordResponse is a response message for the ResetPassword method.
message ResetPasswordResponse {
  // The user that has been authenticated.
  User user = 1;
}