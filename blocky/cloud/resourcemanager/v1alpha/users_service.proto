// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.cloud.resourcemanager.v1alpha;

import "blocky/cloud/resourcemanager/v1alpha/user.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/cloud/resourcemanager/v1alpha;resourcemanagerpb";

// A service that allows developers to access the user's information.
service UsersService {
  // Gets the specified user.
  rpc Get(GetUserRequest) returns (User) {
    option (google.api.http) = {get: "/v1alpha/{name=users/*}"};
  }

  // Gets the batch of users specified in the request.
  rpc BatchGetUsers(BatchGetUsersRequest) returns (BatchGetUsersResponse) {
    option (google.api.http) = {post: "/v1alpha/users:batchGet"};
  }
}

// Request message for `GetUser` method.
message GetUserRequest {
  // Required. The name of the user to retrieve.
  // Must be of the form `users/{user}`.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// Request message for `BatchGetUsers` method.
message BatchGetUsersRequest {
  // Required. The names of the users to retrieve.
  // A maximum of 1000 users can be retrieved in a batch.
  repeated string names = 1 [(google.api.field_behavior) = REQUIRED];
}

// Response message for `BatchGetUsers` method.
message BatchGetUsersResponse {
  // The users requested.
  repeated User users = 1;
}