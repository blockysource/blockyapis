// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.cloud.resourcemanager.v1alpha;

import "blocky/cloud/resourcemanager/v1alpha/organizations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/cloud/resourcemanager/v1alpha;resourcemanagerpb";

// A service for managing cloud organizations.
service OrganizationsService {
  // Gets the organization by the identifier.
  rpc GetOrganization(GetOrganizationRequest) returns (Organization);

  // Lists the organizations that are visible to the user and satisfy the
  // specified filter.
  rpc ListOrganizationUsers(ListOrganizationsRequest) returns (ListOrganizationsResponse);
}

// A request message for GetOrganization method.
message GetOrganizationRequest {
  // The identifier of the organization.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// A request message for ListOrganizations method.
message ListOrganizationsRequest {
  // The maximum number of organizations to return.
  // By default, this value is set to 100.
  int32 page_size = 1 [(.google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // A pagination token returned from a previous call to `ListOrganizations`
  // that indicates where this listing should continue from.
  string page_token = 2;

  // A filter constraining the organizations to return. The filter must be
  // an organization name, a domain name or an email address that is associated
  // with the organization. Empty filter returns all organizations.
  string filter = 3;
}

// A response message for ListOrganizations method.
message ListOrganizationsResponse {
  // The list of organizations that matched the list query, possibly paginated.
  repeated Organization organizations = 1;

  // A pagination token to be used to retrieve the next page of results. If the
  // result is too large to fit within the page size specified in the request,
  // this field will be set with a token that can be used to fetch the next page
  // of results. If this field is empty, it indicates that this response
  // contains the last page of results.
  string next_page_token = 2;
}