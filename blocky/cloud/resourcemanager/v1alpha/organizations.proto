// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.cloud.resourcemanager.v1alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/cloud/resourcemanager/v1alpha;cloudresourcemanagerpb";

// A service for managing cloud organizations.
service Organizations {
  // Creates a new organization.
  rpc CreateOrganization(CreateOrganizationRequest) returns (Organization);

  // Gets the organization by the identifier.
  rpc GetOrganization(GetOrganizationRequest) returns (Organization);

  // Updates the organization.
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (Organization);

  // Deletes the organization by the identifier.
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (google.protobuf.Empty);

  // Adds the user to the project.
  rpc AddOrganizationUser(AddOrganizationUserRequest) returns (OrganizationUser);

  // Remove the user from the project.
  rpc RemoveOrganizationUser(RemoveOrganizationUserRequest) returns (google.protobuf.Empty);

  // Lists the users of the organization.
  rpc ListOrganizationUsers(ListOrganizationUsersRequest) returns (ListOrganizationUsersResponse);
}

// Organization represents a cloud organization resource.
message Organization {
  // Resource name of the Organization
  // The format of the organization resource name:
  // `organizations/*`
  string name = 1 [
    (google.api.field_behavior) = IDENTIFIER,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/Organization"}
  ];

  // The unique server-generated UUID identifier for the key.
  // It could be used as the organization identifier in its resource name.
  string uid = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // The aliases that can be used to refer to the organization.
  // The full path of the alias is:
  // 'organizations/{organization_alias}'
  repeated string aliases = 3 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The display name of the organization.
  string display_name = 4 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // Time when the key was created.
  google.protobuf.Timestamp create_time = 12 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when the organization was last modified.
  google.protobuf.Timestamp update_time = 13 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The owner of the organization.
  string owner = 14 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// OrganizationUser represents a user resource registered for an organization.
message OrganizationUser {
  option (google.api.resource) = {
    type: "cloudresourcemanager.blockyapis.com/OrganizationUser"
    pattern: "organizations/{organization}/users/{user}"
    name_field: "name"
  };

  // Resource name of the OrganizationUser
  // The format of the organization user resource name:
  // `organizations/{organization}/users/{user}`
  string name = 1 [
    (google.api.field_behavior) = IDENTIFIER,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/OrganizationUser"}
  ];

  // The unique server-generated UUID identifier for the key.
  // It could be used as the organization user identifier in its resource name.
  string uid = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // The identifier of the User.
  string user = 3 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/User"}
  ];

  // Time when the key was created.
  google.protobuf.Timestamp create_time = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when the organization user was last modified.
  google.protobuf.Timestamp update_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The user's email address.
  string email = 14 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The user's role in the organization.
  string role = 15 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The user's avatar URL.
  string avatar_url = 16 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// A request message for CreateOrganization method.
message CreateOrganizationRequest {
  // The organization to create.
  Organization organization = 1 [(google.api.field_behavior) = REQUIRED];
}

// A request message for GetOrganization method.
message GetOrganizationRequest {
  // The identifier of the organization.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// A request message for UpdateOrganization method.
message UpdateOrganizationRequest {
  // The resource name of the organization to update.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/Organization"}
  ];

  // The organization to update.
  Organization organization = 2 [(google.api.field_behavior) = REQUIRED];
}

// A request message for DeleteOrganization method.
message DeleteOrganizationRequest {
  // The identifier of the organization.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// A request message for AddOrganizationUser method.
message AddOrganizationUserRequest {
  // The identifier of the organization.
  string organization = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/Organization"}
  ];

  // The identifier of the user.
  string user = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/User"}
  ];
}

// A request message for RemoveOrganizationUser method.
message RemoveOrganizationUserRequest {
  // The resource name of the organization user.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/OrganizationUser"}
  ];
}

// A request message for ListOrganizationUsers method.
message ListOrganizationUsersRequest {
  // The identifier of the organization.
  string organization = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/Organization"}
  ];

  // The maximum number of users to return.
  int32 page_size = 2;

  // A page token received from the previous `ListOrganizationUsers` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListOrganizationUsers` must match
  // the call that provided the page token.
  string page_token = 3;
}

// A response message for ListOrganizationUsers method.
message ListOrganizationUsersResponse {
  // The users of the organization in this page.
  repeated OrganizationUser users = 1;

  // A token to retrieve the next page of results.
  // Pass this value in the `page_token` field in the subsequent call to `ListOrganizationUsers` method
  // to retrieve the next page of results.
  string next_page_token = 2;
}