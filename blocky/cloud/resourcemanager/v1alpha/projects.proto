// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.cloud.resourcemanager.v1alpha;

import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/cloud/resourcemanager/v1alpha;cloudresourcemanagerpb";

// A service that manages cloud projects..
service ProjectsService {
  // Creates a new project.
  rpc CreateProject(CreateProjectRequest) returns (Project);

  // Gets the project by the identifier.
  rpc GetProject(GetProjectRequest) returns (Project);

  // Lists the projects that user is a member of.
  // If the user is a member of the organization, the projects of the organization are returned as well.
  rpc ListProjects(ListProjectsRequest) returns (ListProjectsResponse);

  // Updates the project.
  rpc UpdateProject(UpdateProjectRequest) returns (Project);

  // Deletes the project by the identifier.
  rpc DeleteProject(DeleteProjectRequest) returns (google.protobuf.Empty);
}

// Project represents a cloud project resource.
message Project {
  option (google.api.resource) = {
    type: "cloudresourcemanager.blockyapis.com/Project"
    pattern: "projects/{project}"
    name_field: "name"
    style: DECLARATIVE_FRIENDLY
  };

  // The project's lifecycle state.
  enum State {
    // The project is in an unspecified state.
    STATE_UNSPECIFIED = 0;

    // The project is active.
    ACTIVE = 1;

    // The project has been marked for deletion by the user
    // (by invoking DeleteProject) or by the system.
    DELETE_REQUESTED = 2;
  }
  // Resource name of the Project
  // The format of the project resource name:
  // `projects/*`
  string name = 1 [
    (google.api.field_behavior) = IDENTIFIER,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/Project"}
  ];

  // The unique server-generated KSUID identifier for the key.
  // It could be used as the project identifier in its resource name.
  string uid = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // Globally unique, user-assigned project identifier.
  // The value needs to be 6-30 lowercase ASCII letters, digits, or hyphens.
  // It must start with a letter, and contain no spaces.
  // This value is immutable after project creation time.
  string project_id = 3 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.field_behavior) = REQUIRED
  ];

  // The project's current state.
  State state = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The display name of the project.
  string display_name = 5 [(google.api.field_behavior) = NON_EMPTY_DEFAULT];

  // Time when the key was created.
  google.protobuf.Timestamp create_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when the project was last modified.
  google.protobuf.Timestamp update_time = 7 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when the project was marked for deletion.
  google.protobuf.Timestamp delete_time = 8 [(google.api.field_behavior) = OUTPUT_ONLY];

  // An optional parent resource name of the project.
  string parent = 9 [(google.api.field_behavior) = OPTIONAL];
}

// ProjectUser represents a user that has access to a project resource.
message ProjectUser {
  option (google.api.resource) = {
    type: "cloudresourcemanager.blockyapis.com/ProjectUser"
    pattern: "projects/{project}/users/{user}"
    name_field: "name"
  };

  // Resource name of the ProjectUser
  // The format of the project user resource name:
  // `projects/{project}/users/{user}`
  string name = 1 [
    (google.api.field_behavior) = IDENTIFIER,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/ProjectUser"}
  ];

  // The unique server-generated UUID identifier for the key.
  // It could be used as the project user identifier in its resource name.
  string uid = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.field_behavior) = IMMUTABLE
  ];

  // The identifier of the User.
  string user = 3 [
    (google.api.field_behavior) = IMMUTABLE,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/User"}
  ];

  // Time when the key was created.
  google.protobuf.Timestamp create_time = 4 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The time when the project user was last modified.
  google.protobuf.Timestamp update_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The user's email address.
  string email = 14 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The user's role in the project.
  string role = 15 [(google.api.field_behavior) = OUTPUT_ONLY];

  // The user's avatar URL.
  string avatar_url = 16 [(google.api.field_behavior) = OUTPUT_ONLY];
}

// A request message for CreateProject method.
message CreateProjectRequest {
  // The name of the parental resource where the project will be created.
  // It may either be the organization or the user.
  string parent = 1 [(google.api.field_behavior) = OPTIONAL];

  // The project to create.
  Project project = 2 [(google.api.field_behavior) = REQUIRED];
}

// A request message for GetProject method.
message GetProjectRequest {
  // The identifier of the project.
  string name = 1 [(google.api.field_behavior) = REQUIRED];
}

// A request message for ListProjects method.
message ListProjectsRequest {
  // The identifier of the parent.
  // It's either the organization or the user.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/Organization"}
  ];

  // The maximum number of projects to return.
  int32 page_size = 2;

  // A page token received from the previous `ListProjects` call.
  // Provide this to retrieve the subsequent page.
  //
  // When paginating, all other parameters provided to `ListProjects` must match
  // the call that provided the page token.
  string page_token = 3;
}

// A response message for ListProjects method.
message ListProjectsResponse {
  // The projects.
  repeated Project projects = 1;

  // A token to retrieve the next page of results.
  // Pass this value in the `page_token` field in the subsequent call to `ListProjects` method
  // to retrieve the next page of results.
  string next_page_token = 2;
}

// A request message for UpdateProject method.
message UpdateProjectRequest {
  // The resource name of the project to update.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/Project"}
  ];

  // The project to update.
  Project project = 2 [(google.api.field_behavior) = REQUIRED];
}

// A request message for DeleteProject method.
message DeleteProjectRequest {
  // The identifier of the project.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.googleapis.com/Project"}
  ];
}