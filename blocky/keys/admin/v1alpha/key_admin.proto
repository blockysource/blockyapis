// Copyright 2023 The Blocky Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package blocky.keys.admin.v1alpha;

import "blocky/api/annotations.proto";
import "blocky/keys/admin/v1alpha/key.proto";
import "blocky/keys/admin/v1alpha/key_ring.proto";
import "blocky/keys/admin/v1alpha/key_revision.proto";
import "google/api/annotations.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/field_mask.proto";

option go_package = "github.com/blockysource/go-genproto/blocky/keys/admin/v1alpha;keysadminv1alpha";

// KeyAdminService is an administration service for the authorization keys.
service KeyAdminService {
  // Configures the token scopes.
  option (google.api.oauth_scopes) = "https://www.blockyapis.com/auth/keys.admin";

  // CreateKey creates a new authorization key.
  // New key is neither active nor used in a set.
  rpc CreateKey(CreateKeyRequest) returns (Key) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=projects/*}/keys",
      body: "key"
    };
    option (google.api.method_signature) = "parent,key";
  }

  // GetKey returns the specified authorization key.
  rpc GetKey(GetKeyRequest) returns (Key) {
    option (google.api.http) = {get: "/v1alpha/{name=projects/*/keys/*}"};
    option (google.api.method_signature) = "name";
  }

  // ListKeys lists authorization keys that matches given request.
  rpc ListKeys(ListKeysRequest) returns (ListKeysResponse) {
    option (blocky.api.query_params) = {
      pagination: {
        max_size: 100,
        default_size: 50
      },
      order_by: "created_at desc"
    };
    option (google.api.http) = {get: "/v1alpha/{parent=projects/*}/keys"};
    option (google.api.method_signature) = "parent";
  }

  // UpdateKey updates the specified authorization key.
  rpc UpdateKey(UpdateKeyRequest) returns (Key) {
    option (google.api.http) = {
      patch: "/v1alpha/{key.name=projects/*/keys/*}",
      body: "key"
    };
    option (google.api.method_signature) = "key,update_mask";
  }



  // Creates a new key revision and rotates the key.
  rpc RotateKey(RotateKeyRequest) returns (Key) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=projects/*/keys/*}/keys:rotate",
      body: "*"
    };
    option (google.api.method_signature) = "parent";
  }

  // GetKeyRevision returns the specified key revision.
  rpc GetKeyRevision(GetKeyRevisionRequest) returns (KeyRevision) {
    option (google.api.http) = {get: "/v1alpha/{name=projects/*/keys/*}"};
    option (google.api.method_signature) = "name";
  }

  // ListKeyRevisions lists authorization keys that matches given request.
  rpc ListKeyRevisions(ListKeyRevisionsRequest) returns (ListKeyRevisionsResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=projects/*/keys/*}/revisions"};
    option (google.api.method_signature) = "parent";
    option (blocky.api.query_params) = {
      pagination: {
        max_size: 100,
        default_size: 20,
      }
      order_by: "create_time desc"
    };
  }

  // Create a new key ring.
  rpc CreateKeyRing(CreateKeyRingRequest) returns (KeyRing) {
    option (google.api.http) = {
      post: "/v1alpha/{parent=projects/*}/key_rings",
      body: "key_ring"
    };
    option (google.api.method_signature) = "parent,key_ring";
  }

  // List key rings.
  rpc ListKeyRings(ListKeyRingsRequest) returns (ListKeyRingsResponse) {
    option (google.api.http) = {get: "/v1alpha/{parent=projects/*}/key_rings"};
    option (google.api.method_signature) = "parent";
    option (blocky.api.query_params) = {
      pagination: {
        max_size: 100,
        default_size: 50
      },
      order_by: "create_time desc"
    };
  }

  // Get key ring.
  rpc GetKeyRing(GetKeyRingRequest) returns (KeyRing) {
    option (google.api.http) = {get: "/v1alpha/{name=projects/*/key_rings/*}"};
    option (google.api.method_signature) = "name";
  }

  // Update key ring.
  rpc UpdateKeyRing(UpdateKeyRingRequest) returns (KeyRing) {
    option (google.api.http) = {
      patch: "/v1alpha/{key_ring.name=projects/*/key_rings/*}",
      body: "key_ring"
    };
    option (google.api.method_signature) = "key_ring,update_mask";
  }

  // Delete key ring.
  rpc DeleteKeyRing(DeleteKeyRingRequest) returns (KeyRing) {
    option (google.api.http) = {delete: "/v1alpha/{name=projects/*/key_rings/*}"};
    option (google.api.method_signature) = "name";
  }
}

// The request message for
// [AuthzAdminService.CreateKey][blocky.keys.admin.v1alpha.AuthzAdminService.CreateKey].
message CreateKeyRequest {
  // Required. The resource name of the project in which to create the key.
  // Format: 'projects/{project}'.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/Project"}
  ];

  // Required, resource to create.
  Key key = 2 [(google.api.field_behavior) = REQUIRED];
}

// The request message for
// [AuthzAdminService.GetKey][blocky.keys.admin.v1alpha.AuthzAdminService.GetKey].
message GetKeyRequest {
  // Required. The resource name of the key to retrieve.
  // Format: 'projects/{project}/keys/{key}'.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "keys.blockyapis.com/Key"}
  ];
}

// The request message for
// [KeyAdminService.ListKeys][blocky.keys.admin.v1alpha.KeyAdminService.ListKeys].
message ListKeysRequest {
  // Required. The resource name of the project whose keys are to be listed.
  // Format: 'projects/{project}'.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/Project"}
  ];

  // Optional. The maximum number of Keys to return in the response. The
  // server allows a maximum of 300 Keys to return. If unspecified, the
  // server will use 50 as the default, unless its configuration specifies
  // a smaller default.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A pagination token returned from a previous call to
  // ListKeysRequest that indicates where this listing should continue from.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The response message for
// [KeyAdminService.ListKeys][blocky.keys.admin.v1alpha.KeyAdminService.ListKeys].
message ListKeysResponse {
  // List of keys matching the request.
  repeated Key keys = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// The request message for
// [KeyAdminService.UpdateKey][blocky.keys.admin.v1alpha.KeyAdminService.UpdateKey].
message UpdateKeyRequest {
  // Required identifier of the key to update.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "keys.blockyapis.com/Key"}
  ];

  // Required, resource to update.
  Key key = 2 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to update.
  // If empty, all modifiable fields will be updated.
  google.protobuf.FieldMask update_mask = 3 [(google.api.field_behavior) = REQUIRED];
}


// The request message for
// [KeyAdminService.RotateKey][blocky.keys.admin.v1alpha.KeyAdminService.RotateKey].
message RotateKeyRequest {
  // Required identifier of the key to create a revision for.
  // Format: 'projects/{project}/keys/{key}'.
  string parent = 1 [
    (google.api.resource_reference) = {type: "keys.blockyapis.com/Key"},
    (google.api.field_behavior) = REQUIRED
  ];
}

// The request message for
// [KeyAdminService.GetKey][blocky.keys.admin.v1alpha.KeyAdminService.GetKey].
message GetKeyRevisionRequest {
  // Required identifier of the key revision to get.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "keys.blockyapis.com/Key"}
  ];
}

// The request message for
// [KeyAdminService.ListKeys][blocky.keys.admin.v1alpha.KeyAdminService.ListKeys].
message ListKeyRevisionsRequest {
  // Required identifier of the key to list revisions for.
  // This might be either a project, or a key core.
  // Format:
  // - 'projects/{project}/keys/{key}'
  string parent = 1 [
    (google.api.resource_reference) = {type: "keys.blockyapis.com/Key"},
    (google.api.field_behavior) = REQUIRED
  ];

  // Optional page_size on the number of key revisions to include in the response.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional page token to continue listing key revisions from.
  // If not provided, the service will start listing from the beginning.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The response message for
// [KeyAdminService.ListKeys][blocky.keys.admin.v1alpha.KeyAdminService.ListKeys].
message ListKeyRevisionsResponse {
  // List of key revisions for the requested key.
  repeated KeyRevision key_revisions = 1;

  // Token to continue listing key revisions from.
  // If there are no more key revisions to list, the token is not included.
  string next_page_token = 2;
}

// The request message for
// [KeyAdminService.CreateKeyRing][blocky.keys.admin.v1alpha.KeyAdminService.CreateKeyRing].
message CreateKeyRingRequest {
  // Required. The resource name of the project in which to create the key ring.
  // Format: 'projects/{project}'.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/Project"}
  ];

  // Required, resource to create.
  KeyRing key_ring = 2 [(google.api.field_behavior) = REQUIRED];
}

// The request message for
// [KeyAdminService.ListKeyRings][blocky.keys.admin.v1alpha.KeyAdminService.ListKeyRings].
message ListKeyRingsRequest {
  // Required. The resource name of the project whose key rings are to be listed.
  // Format: 'projects/{project}'.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "cloudresourcemanager.blockyapis.com/Project"}
  ];

  // Optional. The maximum number of KeyRings to return in the response. The
  // server allows a maximum of 300 KeyRings to return. If unspecified, the
  // server will use 50 as the default, unless its configuration specifies
  // a smaller default.
  int32 page_size = 2 [(google.api.field_behavior) = OPTIONAL];

  // Optional. A pagination token returned from a previous call to
  // ListKeyRingsRequest that indicates where this listing should continue from.
  string page_token = 3 [(google.api.field_behavior) = OPTIONAL];
}

// The response message for
// [KeyAdminService.ListKeyRings][blocky.keys.admin.v1alpha.KeyAdminService.ListKeyRings].
message ListKeyRingsResponse {
  // List of key rings matching the request.
  repeated KeyRing key_rings = 1;

  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 2;
}

// The request message for
// [KeyAdminService.GetKeyRing][blocky.keys.admin.v1alpha.KeyAdminService.GetKeyRing].
message GetKeyRingRequest {
  // Required. The resource name of the key ring to retrieve.
  // Format: 'projects/{project}/key_rings/{key_ring}'.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "keys.blockyapis.com/KeyRing"}
  ];
}

// The request message for
// [KeyAdminService.UpdateKeyRing][blocky.keys.admin.v1alpha.KeyAdminService.UpdateKeyRing].
message UpdateKeyRingRequest {
  // Required identifier of the key ring to update.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "keys.blockyapis.com/KeyRing"}
  ];

  // Required, resource to update.
  KeyRing key_ring = 2 [(google.api.field_behavior) = REQUIRED];

  // The list of fields to update.
  // If empty, all modifiable fields will be updated.
  google.protobuf.FieldMask update_mask = 3 [(google.api.field_behavior) = REQUIRED];
}

// The request message for
// [KeyAdminService.DeleteKeyRing][blocky.keys.admin.v1alpha.KeyAdminService.DeleteKeyRing].
message DeleteKeyRingRequest {
  // Required. The resource name of the key ring to delete.
  // Format: 'projects/{project}/key_rings/{key_ring}'.
  string name = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "keys.blockyapis.com/KeyRing"}
  ];
}
